---

resources: "resources.yaml"
samples: "samples.tsv"
units: "units.tsv"

default_container: "docker://hydragenetics/common:0.1.0"

#programdir:
#  dir: "/projects/wp3/nobackup/Workspace/WGS_pipeline_GPU_test/Poirot_RD-WGS-master/workflow"

modules:
  cnv_sv: "master"
  parabricks: "develop"
  prealignment: "v0.1.0"
  qc: "some_qc_add"
  misc: "develop"

reference:
  fasta: "/data/ref_genomes/GRCh38/reference_grasnatter/homo_sapiens.fasta"
  genome_dir: "/data/ref_genomes/GRCh38/reference_grasnatter/"
  sites: "/data/ref_genomes/GRCh38/reference_grasnatter/homo_sapiens.known_indels.vcf.gz"
  1000Ginterval: "/projects/wp3/nobackup/Workspace/PEDDY/1000G.bed"
  design_intervals: "/projects/wp3/Reference_files/Manifest/Clinical_research_exome/TWIST/Twist_Comprehensive_Exome_Covered_Targets_hg38_interval_list.bed"
  design_bed: "/projects/wp3/Reference_files/Manifest/Clinical_research_exome/TWIST/Twist_Comprehensive_Exome_Covered_Targets_hg38.bed"

trimmer_software: "fastp_pe"

fastp_pe:
  container: "docker://hydragenetics/fastp:0.20.1"

fastqc:
  container: "docker://hydragenetics/fastqc:0.11.9"

multiqc:
  container: "docker://hydragenetics/multiqc:1.11"
  config: "multiqc.config"
  qc_files:
    - "qc/picard_collect_alignment_summary_metrics/{sample}_{type}.alignment_summary_metrics.txt"
    - "qc/fastqc/{sample}_{type}_fastq1_fastqc.zip"
    - "qc/fastqc/{sample}_{type}_fastq2_fastqc.zip"
    - "qc/picard_collect_duplication_metrics/{sample}_{type}.duplication_metrics.txt"
    - "qc/picard_collect_multiple_metrics/{sample}_{type}.alignment_summary_metrics"
    - "qc/picard_collect_multiple_metrics/{sample}_{type}.base_distribution_by_cycle_metrics"
    - "qc/picard_collect_multiple_metrics/{sample}_{type}.base_distribution_by_cycle.pdf"
    - "qc/picard_collect_multiple_metrics/{sample}_{type}.insert_size_metrics"
    - "qc/picard_collect_multiple_metrics/{sample}_{type}.insert_size_histogram.pdf"
    - "qc/picard_collect_multiple_metrics/{sample}_{type}.quality_by_cycle_metrics"
    - "qc/picard_collect_multiple_metrics/{sample}_{type}.quality_by_cycle.pdf"
    - "qc/picard_collect_multiple_metrics/{sample}_{type}.quality_distribution_metrics"
    - "qc/picard_collect_multiple_metrics/{sample}_{type}.quality_distribution.pdf"
    - "qc/picard_collect_insert_size_metrics/{sample}_{type}.insert_size_metrics.txt"
    - "qc/picard_collect_insert_size_metrics/{sample}_{type}.insert_size_histogram.pdf"
    - "qc/mosdepth/{sample}_{type}.mosdepth.global.dist.txt"
    - "qc/mosdepth/{sample}_{type}.mosdepth.region.dist.txt"
    - "qc/mosdepth/{sample}_{type}.mosdepth.summary.txt"
    - "qc/mosdepth/{sample}_{type}.regions.bed.gz"
    - "qc/mosdepth/{sample}_{type}.regions.bed.gz.csi"
    - "qc/picard_collect_hs_metrics/{sample}_{type}.HsMetrics.txt"
    - "qc/picard_collect_gc_bias_metrics/{sample}_{type}.gc_bias.pdf"
    - "qc/picard_collect_gc_bias_metrics/{sample}_{type}.gc_bias.detail_metrics"
    - "qc/picard_collect_gc_bias_metrics/{sample}_{type}.gc_bias.summary_metrics"
    - "qc/samtools_stats/{sample}_{type}.samtools-stats.txt"
    - "qc/samtools_idxstats/{sample}_{type}.samtools-idxstats.txt"
#     - "prealignment/fastp_pe/{sample}_{run}_{lane}_{type}.json"

mosdepth:
  container: "docker://hydragenetics/mosdepth:0.3.2"
  extra: "--fast-mode --no-per-base"
#  by: "500"

picard_collect_alignment_summary_metrics:
  container: "docker://hydragenetics/picard:2.25.0"

picard_collect_duplication_metrics:
  container: "docker://hydragenetics/picard:2.25.0"

picard_collect_gc_bias_metrics:
  container: "docker://hydragenetics/picard:2.25.0"

picard_collect_hs_metrics:
  container: "docker://hydragenetics/picard:2.25.0"

picard_collect_insert_size_metrics:
  container: "docker://hydragenetics/picard:2.25.0"

picard_collect_multiple_metrics:
  container: "docker://hydragenetics/picard:2.25.0"
  output_ext:
    - "alignment_summary_metrics"
    - "base_distribution_by_cycle_metrics"
    - "base_distribution_by_cycle.pdf"
    - "insert_size_metrics"
    - "insert_size_histogram.pdf"
    - "quality_by_cycle_metrics"
    - "quality_by_cycle.pdf"
    - "quality_distribution_metrics"
    - "quality_distribution.pdf"

# picard_collect_wgs_metrics:
#   container: "docker://hydragenetics/picard:2.25.0"

samtools:
  container: "docker://hydragenetics/common:0.1.0"

tabix:
  container: "docker://hydragenetics/common:0.1.0"

genepanels:
  - /projects/wp3/Reference_files/Manifest/Clinical_research_exome/Gene_panels/ALS.bed
  - /projects/wp3/Reference_files/Manifest/Clinical_research_exome/Gene_panels/Aortopatier.bed
  - /projects/wp3/Reference_files/Manifest/Clinical_research_exome/Gene_panels/Arytmier.bed
  - /projects/wp3/Reference_files/Manifest/Clinical_research_exome/Gene_panels/Bindvav.bed
  - /projects/wp3/Reference_files/Manifest/Clinical_research_exome/Gene_panels/BRCA.bed
  - /projects/wp3/Reference_files/Manifest/Clinical_research_exome/Gene_panels/CADASIL.bed
  - /projects/wp3/Reference_files/Manifest/Clinical_research_exome/Gene_panels/EBS.bed
  - /projects/wp3/Reference_files/Manifest/Clinical_research_exome/Gene_panels/EDS.bed
  - /projects/wp3/Reference_files/Manifest/Clinical_research_exome/Gene_panels/epilepsi.bed
  - /projects/wp3/Reference_files/Manifest/Clinical_research_exome/Gene_panels/HHT.bed
  - /projects/wp3/Reference_files/Manifest/Clinical_research_exome/Gene_panels/Ichtyos.bed
  - /projects/wp3/Reference_files/Manifest/Clinical_research_exome/Gene_panels/kardio.bed
  - /projects/wp3/Reference_files/Manifest/Clinical_research_exome/Gene_panels/Kraniosynostos_v2.bed
  - /projects/wp3/Reference_files/Manifest/Clinical_research_exome/Gene_panels/neuromuskular.bed
  - /projects/wp3/Reference_files/Manifest/Clinical_research_exome/Gene_panels/neuropati.bed
  - /projects/wp3/Reference_files/Manifest/Clinical_research_exome/Gene_panels/Periodisk_paralys.bed
  - /projects/wp3/Reference_files/Manifest/Clinical_research_exome/Gene_panels/Rasopatier.bed
  - /projects/wp3/Reference_files/Manifest/Clinical_research_exome/Gene_panels/Sotos.bed
  - /projects/wp3/Reference_files/Manifest/Clinical_research_exome/Gene_panels/Trombocytopenier.bed
